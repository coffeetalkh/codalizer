{"index":10,"unused":5,"ruleset":0,"naming":4,"codeSize":1,"details":[{"rule_name":"naming_rule","class":"Convert","method":"to","where":"\/Library\/WebServer\/Documents\/datium\/src\/Convert.php","start":"95","end":"102","rule":"ShortMethodName","ruleset":"Naming Rules","package":"OpenCafe\\Tools","priority":"3","id":1,"description":"\n      Avoid using short method names like Convert::to(). The configured minimum method name length is 3.\n    "},{"rule_name":"naming_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/Convert.php","start":"137","end":"137","rule":"LongVariable","ruleset":"Naming Rules","package":"","priority":"3","id":2,"description":"\n      Avoid excessively long variable names like $days_of_gregorain_years. Keep variable name length under 20.\n    "},{"rule_name":"naming_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/Convert.php","start":"345","end":"345","rule":"LongVariable","ruleset":"Naming Rules","package":"","priority":"3","id":3,"description":"\n      Avoid excessively long variable names like $days_of_gregorain_years. Keep variable name length under 20.\n    "},{"rule_name":"unused_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/DateTimeFormat.php","start":"25","end":"25","rule":"UnusedPrivateField","ruleset":"Unused Code Rules","package":"","priority":"3","id":4,"description":"\n      Avoid unused private fields such as '$simple'.\n    "},{"rule_name":"unused_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/Lang.php","start":"93","end":"93","rule":"UnusedLocalVariable","ruleset":"Unused Code Rules","package":"","priority":"3","id":5,"description":"\n      Avoid unused local variables such as '$key'.\n    "},{"rule_name":"naming_rule","class":"Leap","method":"get","where":"\/Library\/WebServer\/Documents\/datium\/src\/Leap.php","start":"47","end":"54","rule":"BooleanGetMethodName","ruleset":"Naming Rules","package":"OpenCafe\\Tools","priority":"4","id":6,"description":"\n      The 'get()' method which returns a boolean should be named 'is...()' or 'has...()'\n    "},{"rule_name":"unused_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/SimpleDiff.php","start":"40","end":"40","rule":"UnusedFormalParameter","ruleset":"Unused Code Rules","package":"","priority":"3","id":7,"description":"\n      Avoid unused parameters such as '$start'.\n    "},{"rule_name":"unused_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/SimpleDiff.php","start":"40","end":"40","rule":"UnusedFormalParameter","ruleset":"Unused Code Rules","package":"","priority":"3","id":8,"description":"\n      Avoid unused parameters such as '$end'.\n    "},{"rule_name":"unused_rule","class":"","method":"","where":"\/Library\/WebServer\/Documents\/datium\/src\/SimpleDiff.php","start":"61","end":"61","rule":"UnusedLocalVariable","ruleset":"Unused Code Rules","package":"","priority":"3","id":9,"description":"\n      Avoid unused local variables such as '$result'.\n    "},{"rule_name":"code_size","class":"SimpleDiffTest","method":"testSimpleDiff","where":"\/Library\/WebServer\/Documents\/datium\/tests\/SimpleDiffTest.php","start":"10","end":"237","rule":"ExcessiveMethodLength","ruleset":"Code Size Rules","package":"OpenCafe\\Datium\\Test","priority":"3","id":10,"description":"\n      The method testSimpleDiff() has 228 lines of code. Current threshold is set to 100. Avoid really long methods.\n    "}],"count":10,"fileViolations":6}